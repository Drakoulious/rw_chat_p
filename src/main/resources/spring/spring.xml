<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:mybatis="http://mybatis.org/schema/mybatis-spring"
       xmlns:jdbc="http://www.springframework.org/schema/jdbc"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:p="http://www.springframework.org/schema/p"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:task="http://www.springframework.org/schema/task"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
       http://mybatis.org/schema/mybatis-spring http://mybatis.org/schema/mybatis-spring.xsd
       http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc.xsd
       http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd
       http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task.xsd">

    <context:annotation-config/>
    <tx:annotation-driven/>

    <bean class="java.net.URI" id="dbUrl">
        <constructor-arg value="#{environment.getProperty('DATABASE_URL')}"/>
    </bean>
    <!--dokkur example: postgres://login:password@hostname:5432/databasename-->
    <bean id="dataSource"
          class="org.apache.tomcat.jdbc.pool.DataSource"
          p:driverClassName="org.postgresql.Driver"
          p:url="#{ 'jdbc:postgresql://' + @dbUrl.getHost() + ':' + @dbUrl.getPort() + @dbUrl.getPath() }"
          p:username="#{dbUrl.getUserInfo().split(':')[0]}"
          p:password="#{dbUrl.getUserInfo().split(':')[1]}"
    />

    <jdbc:initialize-database data-source="dataSource" enabled="true">
        <jdbc:script encoding="utf-8" location="classpath:db/init.sql"/>
    </jdbc:initialize-database>

    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource" />
    </bean>

    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="dataSource" />
        <!--
        https://habrahabr.ru/post/247885/
        http://www.mybatis.org/spring/getting-started.html
        -->
    </bean>

    <!--<mybatis:scan base-package="ru.ilonich.roswarcp.repo" />-->
    <bean id="userMapper" class="org.mybatis.spring.mapper.MapperFactoryBean">
        <property name="mapperInterface" value="ru.ilonich.roswarcp.repo.UserMapper" />
        <property name="sqlSessionFactory" ref="sqlSessionFactory" />
    </bean>

    <bean id="messageMapper" class="org.mybatis.spring.mapper.MapperFactoryBean">
        <property name="mapperInterface" value="ru.ilonich.roswarcp.repo.MessageMapper" />
        <property name="sqlSessionFactory" ref="sqlSessionFactory" />
    </bean>

    <context:component-scan base-package="ru.ilonich.roswarcp.service" />
    <context:component-scan base-package="ru.ilonich.roswarcp.repo" />

    <bean id="messageSaver" class="ru.ilonich.roswarcp.task.GetAndSaveSystemMessagesTask">
        <constructor-arg ref="messageMapper" />
    </bean>

    <task:scheduled-tasks scheduler="myScheduler">
        <task:scheduled ref="messageSaver" method="task" fixed-delay="30000"/>
    </task:scheduled-tasks>
    <task:scheduler id="myScheduler" pool-size="2" />
</beans>